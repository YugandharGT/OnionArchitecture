@page "/fetchdata"
@using Blazorise
@using BlazorServerApp.Data
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
<DataGrid TItem="WeatherForecast" Data="@forecasts" Sortable="true" Editable="true" ShowPager="true" PageSize="3" UseInternalEditing="false">
    <DataGridColumn TItem="WeatherForecast" Field="@nameof(WeatherForecast.Date)" DisplayFormat="{0:dd/MM/yyyy}" Caption="Date"></DataGridColumn>
    <DataGridColumn TItem="WeatherForecast" Field="@nameof(WeatherForecast.TemperatureC)" Caption="Temp(C)" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="WeatherForecast" Field="@nameof(WeatherForecast.TemperatureF)" Caption="Temp(F)" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="WeatherForecast" Field="@nameof(WeatherForecast.Summary)" Caption="Summary" Editable="true"></DataGridColumn>
    <DataGridCommandColumn  TItem="WeatherForecast">
        <NewCommandTemplate>
            <Blazorise.Button Color="Blazorise.Color.Primary" Clicked="@context.Clicked">New</Blazorise.Button>
        </NewCommandTemplate>
        <EditCommandTemplate>
            <Blazorise.Button Color="Blazorise.Color.Secondary" Clicked="@context.Clicked">Edit</Blazorise.Button>
        </EditCommandTemplate>
    </DataGridCommandColumn>
</DataGrid>
    @*<table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>*@
}

@code {
    WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}
